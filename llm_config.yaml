URL: "http://localhost:5001" # "https://api.openai.com"
ENDPOINT: "/api/v1/generate" # "/v1/chat/completions"
STREAM: False
STREAM_ENDPOINT: "/api/extra/generate/stream"
DATA_ENDPOINT: "/api/extra/generate/check"
WORD_LIMIT: 200
BACKEND: "kobold_cpp" # "openai"
DEFAULT_BODY: '{"stop_sequence": "\n\n\n", "max_length":750, "max_context_length":4096, "temperature":1.0, "top_k":120, "top_a":0.0, "top_p":0.85, "typical_p":1.0, "tfs":1.0, "rep_pen":1.2, "rep_pen_range":256, "sampler_order":[6,0,1,3,4,2,5], "seed":-1}'
GENERATION_BODY: '{"stop_sequence": "\n\n\n\n", "max_length":750, "max_context_length":4096, "temperature":1.0, "top_k":120, "top_a":0.0, "top_p":0.85, "typical_p":1.0, "tfs":1.0, "rep_pen":1.2, "rep_pen_range":256, "sampler_order":[6,0,1,3,4,2,5], "seed":-1}'
ANALYSIS_BODY: '{"banned_tokens":"\n\n", "stop_sequence": "\n\n\n\n", "max_length":500, "max_context_length":4096, "temperature":0.15, "top_k":120, "top_a":0.0, "top_p":0.85, "typical_p":1.0, "tfs":1.0, "rep_pen":1.2, "rep_pen_range":256, "mirostat":2, "mirostat_tau":6.0, "mirostat_eta":0.1, "sampler_order":[6,0,1,3,4,2,5], "seed":-1}'
MEMORY_SIZE: 512
PRE_PROMPT: 'Below is an instruction that describes a task, paired with an input that provides further context. As an game keeper for an RPG, write a response that appropriately completes the request.'
BASE_PROMPT: "[Story context: {story_context}]; [History: {history}]; [USER_START] Rewrite [{input_text}] in your own words using the supplied Context and History to create a background for your text. Use about {max_words} words."
ACTION_PROMPT: "[Story context: {story_context}]; [History: {history}]; [USER_START] Rewrite the Action, and nothing else, in your own words using the supplied Context and Location. History is what happened before. Use less than {max_words} words. [Action: {input_text}]."
DIALOGUE_PROMPT: '[Story context: {story_context}]; [Location: {location}]; [History: {history}]; The following is a conversation between {character1} and {character2}; {character1}:{character1_description}; {character2}:{character2_description}; [Conversation history: {previous_conversation}]\n [{character2}s sentiment towards {character1}: {sentiment}]. [USER_START] Write a single response for {character2} in third person pov, using {character2} description. If {character2} has a quest active, they will discuss it based on its status. Use this JSON template: {{"response":"may be both dialogue and action.", "sentiment":"sentiment based on response", "give":"if any item is given as part of the response."}}.'
ITEM_PROMPT: 'Items:[{items}];Characters:[{character1},{character2}]  \n\n [USER_START] Decide if an item was explicitly given, taken, dropped or put somewhere in the following text:[Text:{text}]. Insert your thoughts about whether an item was explicitly given, taken, put somewhere or dropped in "my thoughts", and the results in "item", "from" and "to", or make them empty if . Insert {character1}s sentiment towards {character2} in a single word in "sentiment assessment". Fill in the following JSON template: {{ "thoughts":"", "result": {{ "item":"", "from":"", "to":""}}, {{"sentiment":"sentiment assessment"}} }} End of example. \n\n Write your response in valid JSON.'
COMBAT_PROMPT: 'The following is a combat scene between user {attacker} and {victim} in {location}, {location_description} into a vivid description. [USER_START] Rewrite the following combat result in about 150 words, using the characters weapons and their health status: 1.0 is highest, 0.0 is lowest. Combat Result: {attacker_msg}'
PRE_JSON_PROMPT: 'Below is an instruction that describes a task, paired with an input that provides further context. Write a response in valid JSON format that appropriately completes the request.'
CREATE_CHARACTER_PROMPT: 'Story context: {story_context}; World info: {world_info};[USER_START] For a {story_type}, create a diverse character with rich personality that can be interacted with using the story context and keywords. {{quest_prompt}} Do not mention height. Story context: {story_context}; keywords: {keywords}. Fill in this JSON template and write nothing else: {{"name":"", "description": "50 words", "appearance": "25 words", "personality": "50 words", "money":(int), "level":"", "gender":"m/f/n", "age":(int), "race":""}}'
CREATE_LOCATION_PROMPT: '[Story context: {story_context}]; World info: {world_info}; Zone info: {zone_info}; Exit json example: {{"direction":"", "name":"name of new location", "short_descr":"exit description"}};  Npc or mob example: {{"name":"", "sentiment":"", "race":"", "gender":"m, f, or n", "level":(int), "description":"25 words"}}. Existing connected locations: {exit_locations}. [USER_START] For a {story_type}, describe the following location: {location_name}. {items_prompt} {spawn_prompt} Add a brief description, and one to three additional exits leading to new locations. Fill in this JSON template and do not write anything else: {{"description": "25 words", "exits":[], "items":[], "npcs":[]}}. Write the response in valid JSON.'
CREATE_ZONE_PROMPT: '[Story context: {story_context}]; World info: {world_info}; [USER_START] For a {story_type}, create an new area that can be further populated with locations. The area is about 25 square kilometers. It is connected in the {direction} to {zone_info}. The mood is {mood}. Add a name and brief description. Choose the names of 5 creatures from the supplied list likely to find in the area. Fill in "items" with the names and types of 5 common items in the area. Fill in this JSON template and do not write anything else: {{"name":"", "description": "75 words", "races":[], "items":[], "mood":"5 to -5, where 5 is extremely friendly and -5 is extremely hostile.", "level":(int)}}. Write the response in valid JSON.'
OPENAI_HEADERS: '{"Content-Type":"application/json", "Authorization":""}'
OPENAI_BODY: '{"model":"gpt-3.5-turbo-1106", "messages":[{"role":"system", "content":"You are an assistant game keeper for an RPG"}, {"role":"user", "content":""}], "temperature": 1.0, "max_tokens":500}'
OPENAI_API_KEY: "OPENAI_API_KEY"
OPENAI_JSON_FORMAT: '{"type":"json_object"}'
ITEMS_PROMPT: "Add {items} of various type."
SPAWN_PROMPT: "Add a level {level}, {alignment} npc or mob."
IDLE_ACTION_PROMPT: "[Sentiments towards characters: {sentiments}]; [History: {history}]; [Last action: {last_action}]; [Location: {location}]; [Acting character: {character}]; [USER_START] Choose an item from: {items}, or a character from:{characters}, to interact with, or perform a solo action. Do not make up new characters. Don't contradict or repeat Last Action. [USER_START] Don't write what {character_name} thinks, or what the player (You) or anyone else does. Write what {character_name} does, in present tense third person point of view. Use less than 40 words. "
TRAVEL_PROMPT: "[USER_START] For {character}: pick a location from [{locations}] they would like to travel to or a direction from [{directions}], or stay in the current location. Do not make up new locations. Write what {character_name} chooses. [USER_START] Write only the location name, direction, or write nothing to stay in the same location. Write nothing else."
REACTION_PROMPT: "[Story context: {story_context}]; [History: {history}]; [USER_START] Act as {character}. {acting_character_name} has performed the following action that involves {character_name}: {action}. {character_name}'s sentiment towards {acting_character_name}: {sentiment}. [USER_START] Respond with a suitable action for {character_name}, in present tense third person point of view. Use less than 40 words."
STORY_BACKGROUND_PROMPT: "[USER_START] For an RPG described as {story_type} set in a world described as {world_mood}, {world_info}, write a captivating background story that the player can interact with. Include a large scale plot conflict that the player will encounter. Use less than 400 words."
START_LOCATION_PROMPT: '[Story context: {story_context}]; Zone info: {zone_info}; Item json example: {{"name":"", "type":"", "short_descr":"10 words"}}, type can be "Weapon", "Wearable", "Other" or "Money"; Npc example: {{"name":"", "sentiment":"", "race":"", "gender":"m, f, or n", "level":(int), "description":"25 words"}} ; Exit json example: {{"direction":"", "name":"name of new location", "short_descr":"exit description"}}; [USER_START] For a {story_type}, come up with a name for the location with this description: {location_description}. {items_prompt} {spawn_prompt} Add a brief description, and one to three additional exits leading to new locations. Fill in this JSON template and do not write anything else: {{"name": "", "exits":[], "items":[], "npcs":[]}}.'
STORY_PLOT_PROMPT: "[USER_START] For an RPG described as {story_type} set in a world described as {world_mood}, {world_info}. Based on the following background: {story_background} write an innovative and engaging plot that the player can become part of. Use less than 400 words."
WORLD_ITEMS: '[Story context: {story_context}]; For an RPG described as {story_type} set in a world described as {world_mood}, {world_info}, come up with 7 common items that can be found in the world. Item example: {{"name":"", "type":"", "short_descr":"", "level":int, "value":int}}, type is one of: {item_types}; Fill in this JSON template and do not write anything else: {{"items": []}}.'
WORLD_CREATURES: '[Story context: {story_context}]; For an RPG described as {story_type} set in a world described as {world_mood}, {world_info}, come up with 5 creatures of various level and sentiment that can be found in the world. Creature example: {{"name":"", "body":"", "mass":int(kg), "hp":int, "type":"Npc or Mob", "level":int, "unarmed_attack":One of [FISTS, CLAWS, BITE, TAIL, HOOVES, HORN, TUSKS, BEAK, TALON], "short_descr":""}}. Fill in this JSON template and do not write anything else: {{"creatures": []}}.'
GOAL_PROMPT: '[Characters:{characters}][Sentiments towards characters: {sentiments}]  [Last action: {last_action}] [Location: {location}] [Known locations: {locations}][Acting character: {character}] [Actions available:{actions}] [USER_START] For {character_name}, come up with a goal that plays along with their character description that involves an item, a character or a location in the prompt. Then construct up to three tasks that will lead towards the achievement of said goal. Fill in the following JSON template: {{"goal":"", "tasks":[{"action":"", "what":""}, {"action":"", "what":""}, {"action":"", "what":""}]}}'
JSON_GRAMMAR: "root   ::= object\nvalue  ::= object | array | string | number | (\"true\" | \"false\" | \"null\") ws\n\nobject ::=\n  \"{\" ws (\n            string \":\" ws value\n    (\",\" ws string \":\" ws value)*\n  )? \"}\" ws\n\narray  ::=\n  \"[\" ws (\n            value\n    (\",\" ws value)*\n  )? \"]\" ws\n\nstring ::=\n  \"\\\"\" (\n    [^\"\\\\] |\n    \"\\\\\" ([\"\\\\/bfnrt] | \"u\" [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F]) # escapes\n  )* \"\\\"\" ws\n\nnumber ::= (\"-\"? ([0-9] | [1-9] [0-9]*)) (\".\" [0-9]+)? ([eE] [-+]? [0-9]+)? ws\n\n# Optional space: by convention, applied in this grammar after literal chars when allowed\nws ::= ([ \\t\\n] ws)?"
PLAYER_ENTER_PROMPT: 'Story context: {story_context}; World info: {world_info}; Zone info: {zone_info}; Npc example: {{"name":"", "sentiment":"", "race":"", "gender":"m, f, or n", "level":(int), "description":"25 words", "memories":"25 words"}}. [USER_START] The player has just re-entered this location: {location_info}. Consider whether any items, npcs or mobs should be spawned. For mobs, only enter the name of race. Fill in this JSON template and do not write anything else: {{"items":[], "npcs":[] "mobs":[]}}.'
QUEST_PROMPT: '[Story context: {story_context}]; World info: {world_info}; Zone info: {zone_info}; Character: {character_card}; [USER_START] In an RPG described as {story_type}, {character_name} needs someone to perform a task. Based on the following input, come up with a suitable reason for it, using {character_name}s personality and history. Task info: {base_quest}. Fill in this JSON template and do not write anything else: {{"reason":""}} \n\n '
MAKE_DECISION: '[Sentiments towards characters: {sentiments}]; [History: {history}]; [Location: {location}]; [USER_START] Pick one of the following options that is in line with {character} and perform that action: {types}. Write your motivation for the action, in this JSON format: {{"type":"", "why":"", "where": "", "target":""}} to receive more context.'
FOLLOW_PROMPT: '[USER_START] Play as {character}: Pick a character from [{characters}] they would like to follow, or stay in the current location. Do not make up new characters. Fill in the following JSON template: {{"action":"follow", "character":"", "dialogue":""}}.'
GIVE_PROMPT: '[USER_START] Play as {character}: Pick an item from [{items}] they would like to give to another character among: [{characters}]. Do not make up new characters or items. Use "dialogue" if you want to say something. Fill in the following JSON template: {{"action":"give", "item_name":"", "character_name":"", "dialogue":""}}.'
TAKE_PROMPT: '[USER_START] Play as {character}: Pick an item from [{items}] they would like to take from another character. Do not make up new characters or items. Use "dialogue" if you want to say something. Fill in the following JSON template: {{"action":"take", "item_name":"", "character_name":"", "dialogue":""}}.'
WEAR_PROMPT: '[USER_START] Play as {character}: Pick an item from [{items}] they would like to {wear_or_unwear}. Do not make up new items. Use "dialogue" if you want to say something. Fill in the following JSON template: {{"action":"{wear_or_unwear}", "item_name":"", "dialogue":""}}.'
ATTACK_PROMPT: '[USER_START] Play as {character}: Select someone or something to attack from [creatures]. Do not make up new creatures. Use "dialogue" if you want to say something. Fill in the following JSON template: {{"action":"attack", "creature_name":"", "dialogue":""}}'
NOTE_QUEST_PROMPT: '[Story context: {story_context}]; World info: {world_info}; Zone info: {zone_info};In an RPG described as {story_type}, generate a quest that starts from reading a note. Fill in the following JSON template: {{"type":"find/talk", "target":"what to find, who to talk to", "location":"", "reward":""}}'
USER_START: '### Instruction:'
USER_END: '### Response:\n'